#SIGNAL
ticker=ticker
exchange=exchange
close=close
interval=interval
instant=instant
type=type
floor=floor
any.ticker=ANY

indicator=indicator
action=action
option=option

#exceptions
unsupported.signal.exception=Unsupported signal!
illegal.position.side=Position side must be LONG or SHORT!
position.already.opened=🆘 Position is already opened!\nPosition side: {0}\nEntry price: {1}$
tickers.size.must.be.one=Tickers size must be equal to 1!

#tgbotlogs
pifagor.mfi.signal=🟢 <b>PIFAGOR MFI</b> signal was received!\nAction: <b>{0}</b>\nPrice close: {1}$
pifagor.khalifa.signal.floor=🟡 <b>PIFAGOR Khalifa</b> signal was received!\nFloor: <b>{0}</b>\nPrice close: {1}$
pifagor.mfi.big.guy.debug=Current index: {0}\nSignal received: {1}

pifagor.altcoins.1h.4h.signal=<b>{0}</b> {1,choice,0#🟢|1#🔴} <b>PIFAGOR ALTCOINS</b> signal was received!\nAction: <b>{2}</b>\nTime frame: <b>{3}</b>\nPrice close: {4}$
pifagor.altcoins.1h.4h.try.close.debug=<b>{0}</b> trying to close <b>{1}</b> position...
pifagor.altcoins.1h.4h.try.open.debug=<b>{0}</b> trying to open <b>{1}</b> position...
pifagor.altcoins.1h.4h.debug=<b>{0}</b> current signals:\n\n➡ <b>PIFAGOR_ALTCOINS 1h</b> {1,choice,0#⚫|1#🟢|2#🔴}\n\n➡ <b>PIFAGOR_ALTCOINS 4h</b> {2,choice,0#⚫|1#🟢|2#🔴}

pifagor.altcoins.signal=<b>{0}</b> {1,choice,0#🟢|1#🔴} <b>PIFAGOR ALTCOINS</b> signal was received!\nAction: <b>{2}</b>\nPrice close: {3}$

alarm.once.per.minute.count=#{0}\n🚨 Сигнал {1,choice,0#📈 |1#📉 |2#🟢 |3#🔴 |4#🎉 |5#🔥 |6#⚪ |7#🟢 |8#🔻 |9#🔶 |10#🔸 |11#1️⃣ |12#2️⃣ |13#3️⃣ |14<}<b>{2}</b> мигал за день {3} раз(а)❕
alarm.once.per.minute=#{0} <i>{1}</i>\n🚨 Сигнал {2,choice,0#📈 |1#📉 |2#🟢 |3#🔴 |4#🎉 |5#🔥 |6#⚪ |7#🟢 |8#🔻 |9#🔶 |10#🔸 |11#1️⃣ |12#2️⃣ |13#3️⃣ |14<}<b>{3}</b> {4} мигнул❕
alarm.once.per.bar.close=#{0} <i>{1}</i>\n🚨 Сигнал {2,choice,0#📈 |1#📉 |2#🟢 |3#🔴 |4#🎉 |5#🔥 |6#⚪ |7#🟢 |8#🔻 |9#🔶 |10#🔸 |11#1️⃣ |12#2️⃣ |13#3️⃣ |14<}<b>{3}</b> {4} был закреплён❗
no.alarm.per.minute=🚨 За день ничего не мигало❕

strategy.alarm=#{0} <i>{1}</i>\n🚨 Торговая стратегия <b>{2}</b> {3} совершила действие <b>{4}</b> по цене <i>{5}$</i>

chia.balance.changed=#XCH\n🚨 Баланс адреса <i>«{0}»</i> <b>{1}</b>\nДельта <b>{2}</b>

#filelog
file.close.log={0} {1} {2}$

#tgbot
signal.received=Input signal received:\n\n{0}
error.occured=🆘 Error occured: {0}
position.close=⛔ #{0} <b>CLOSE</b> {1} {2}\nDate: {3}\nProfit: {4}$
position.open={0} #{1} <b>OPEN</b> {2} {3}$\nDate: {4}
position.not.open=🆘 Something went wrong during opening position!\n{0}
position.not.close=🆘 Something went wrong during closing position!\n{0}
tp.sl.not.posted=❗ TP/SL was not posted!
post.take.profit=⚪ Take profit was successfully posted\nStop price: {0}$
post.stop.loss=⚫ Stop loss was successfully posted\nStop price: {0}$

#tgbot commands

enable.strategy=enstrategy
enable.strategy.info=Enables strategy, requires 3 args: strategy type, ticker(s) separated by commas or null if any ticker supported, \
  additional properties (key1=val1;key2=val2...).\
  Available args: takeProfit=int;stopLoss=int;amount=int$/%;leverage=int;logChatIds=id,id..;scheduler=true/false(default);debugMode=true/false(default) or NULL if no properties
strategy.enabled=✅ Strategy was successfully enabled!

disable.strategy=rmstrategy
disable.strategy.info=Disables strategy, requires 1 arg: strategy №.
strategy.disabled=✅ Strategy successfully disabled!
strategy.not.found=🆘 Strategy not found!

get.supported.strategies=getstrategies
get.supported.strategies.info=Returns all supported strategy types.
supported.strategies=✅ <b>Supported strategies:</b>\n\n{0}
supported.strategy=➡ <code>{0}</code>

get.enabled.strategies=getenabledstrategies
get.enabled.strategies.info=Returns all enabled strategies.
enabled.strategies=✅ <b>Enabled strategies:</b>
enabled.strategy=➡ <b>№{0}</b>\n\
  ▪<i>Strategy:</i> <code>{1}</code>\n\
  ▪<i>Tickers:</i> <b>{2}</b>\n\
  ▪<i>Log chat ids:</i>\n{3}\n\
  ▪<i>Properties:</i>\n{4}

get.log=glog
get.log.info=Returns logs, requires 2 args: strategy name, ticker.

process.signal=prsignal
process.signal.info=Sends signal to the handler, requires no args.
process.signal.response=Send signal in JSON format.

set.log.chat=setlogchatids
set.log.chat.info=Sets log chat ids, requires 2 args: ticker, chat id (array of ids separated by commas).

init.log.chat=initlogchat
init.log.chat.info=Initialize log chat, requires 1 arg: ticker.
log.chat.added=Log chat for <b>{0}</b> <code>{1}</code> was successfully initialized!
log.chat.not.added=Something went wrong during adding log chat.
